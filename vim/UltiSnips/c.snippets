snippet def "#define ..." !b
#define $1
endsnippet

snippet ifndef "#ifndef ... #define ... #endif" !b
#ifndef ${1}
#define $1 $2
#endif
endsnippet

snippet once "inclusion guard" !b
#ifndef ${1:`!v toupper(split(expand('%:t'), '\.')[0])`}_H_
#define $1_H_

$3

#endif
endsnippet

snippet incl "#include local" !b
#include "${1:`!v split(expand('%:t'), '\.')[0]`.h}"$2
endsnippet

snippet inc "#include lib" !b
#include <$1>$2
endsnippet

snippet main "int main(...) { ... }" !b
int main(int argc, char* argv[]) {
  $1
}
endsnippet

snippet if "if(...) { ... }" !
if($1) {
  $2
} $3
endsnippet

snippet "el(se?)?" "else { ... }" !r
else {
  $2
} $3
endsnippet

snippet "el(se?)?if" "else if { ... }" !r
else if($1) {
  $2
} $3
endsnippet

snippet "wh(i(le?)?)?" "while (...) { ... }" !br
while($1) {
  $2
}
endsnippet

snippet do "do { ... } while(...);" !b
do {
  $2
} while($1);
endsnippet

snippet "sw(i(t(ch)?)?)?" "switch(...) { ... }" !br
switch($1) {
  $2
}
endsnippet

snippet case "case ...: ... break;" !b
case $1:
  $2
  break;
endsnippet

snippet func "function definition" !b
$1 $2($3) {
  $4
}
endsnippet

snippet ret "return ...;" !
return$1;$2
endsnippet

snippet st "struct ... { ... };" !b
struct $1 {
  $2
};$3
endsnippet

snippet tds "typedef'd struct" !b
typedef struct {
  $2
} $1;
endsnippet

snippet "pr(i(n(tf?)?)?)?" "printf(...)" !r
printf("$1"$2);$3
endsnippet
